procedimento_funzioni_per_casa: 

1) Creazione di un vettore di interi riempito con un numero casuale da 0 a TOT, per N elementi. 

Const int Tot = 100; // massimo valore che può andare dentro ad ogni elemento dell'array 
const int dim_a = 8; // dimensione_array
int a [dim_a]; 

// per generare numeri casuali da 0 a 100 utilizzo la funzione rand(), inizializzo srand() a time(0), 
srand(time(0)); 

void(int a [ ], int dim_a, int tot){
	for (int i = 0; i < dim_a; i++){
		a[i] = rand() % 101; // genero numeri casuali da 0 a 100. 
	} 
}

2) Lettura di un vettore di interi letto da tastiera per N elementi, valutando che il vettore sia inserito ordinatamente (un dato è rifiutato se è minore di quello inserito nella posizione precedente). 

const int dim_a; // dimensioni del vettore. 
int a [dim_a]; // array di interi. 

// leggiamo l'array da tastiera
for (int i = 0; i < dim_a; i++){
	cout << "Inserisci un numero intero: "; 
	cin>>a[i]; 
	while(b[i] < b[i-1]){ 
		cout "Errore: l'array deve essere ordinato in senso crescente!"; 
	}
		
}

3) Ricerca sequenziale di un elemento E in un vettore V di N elementi
const int dim_c = 6; 
int c[dim_c]; 
int da_trovare = 2; 

for (int i = 0; i < dim_c; i++){
if (c[i] == da_trovare)
	return i; 
else
	return -1; 

4) Inserimento di un elemento nella posizione corretta in un vettore ordinato di N elementi con al massimo dim elementi, slittando a destra gli elementi successivi alla posizione di inserimento. 

const int dim_d = 6; 
int d [dim_d]; 
int valore; 

// chiedo all'utente di inserire dei valori ordinati all'interno dell'array: 
for (int i = 0; i < dim_c; i++){
	cout << "Inserisci un valore: \n"; 
	cin>>d[i]; 
	while (d[i] < d[i-1]{
		cout << "Inserimento errato: l'array deve essere ordinato in senso crescente!"; 
	}
// chiedo all'utente il valore dell'elemento che vuole inserire: 
cout "Inserisci il valore del nuovo elemento: \n"; 
cin>>valore; 

0 1 2 3  4  5 6 
1 3 6 9 10 13 -

0 1 2 3 4  5  6
1 3 6   9 10 13

ex. io voglio inserire il 7. 
valore = 7; 
int index = 0; 

// scorro tutti gli elementi del vettore, appena trovo un elemento che ha valore minore o uguale all'elemento che devo inserire mi fermo e mi tengo da parte l'indice. quindi in questo caso mi fermo a 6 e l'indice è il 2 (index)

// facendo così so, che l'elemento che devo inserire deve avere indice pari a index+1 = 3. 
// con un ciclo parto dal fondo, da dim_c fino ad essere maggiore di index (3) e sposto tutti gli elementi di uno verso destra. 
// poi dentro la posizione di indice 3 ci vado a mettere il mio valore.  

for (int i = 0; i < dim_c; i++){
	if (c[i] < valore)
		index = i; 

index = i+1; 
for (int i = dim_c; > index; i--)
	c[i] = c[i-1]; 

c[index] = valore; 
dim_c ++; 
	
5) cancellazione di un elemento e in un vettore ordinato di N elementi (slittando a sinistra gli elemento successivi alla posizione di cancellazione. 

// chiedo in input gli elementi dell'array, verificando che siano ordinati in senso crescente. 

const int dim_max_e = 10; 
int dim_e = 5;  
int e [dim_max_e]; 

for (int i = 0; i < dim_e; i++){
	cout << "Inserisci un valore: ";
	cin>>e[i]; 
	if (i != 0){
		while (e[i] < e[i-1]){
			cout << "Inserimento errato l'array deve essere ordinato in senso crescente! \n"; 
			cout << "Inserisci un nuovo valore: "; 
			cin>>e[i]; 
		}
	}
} 

// adesso che i valori sono stati inseriti in senso crescente, chiedo l'indice dell'elemento da togliere. 
int da_togliere; 
cout << "Immetti l'indice dell'elemento che vuoi estrarre: "; 
cin>>da_togliere; 

// a partire da da_togliere, tutti gli elementi si devono muovere di 1 verso sx. 

0 1 2 3  4  5 
1 3 6 9 10 13 

// se io volessi togliere l'elemento di indice 3 
faccio un for che parte da 3 e arriva fino alla fine, e dentro l'elemento di indice i ci metto il contenuto dell'elemento successivo

0 1 2 3  4  
1 3 6 10 13  

e il totale degli elementi diminuisce. 
for (int i = da_togliere; i < dim_e; i++){
	e[i] = e[i+1]; 
dim_e --; 

6) stampa il vettore
// chiedo in input gli elementi del vettore e gli stampo

const int dim_f = 7; 
int f[dim_f]; 

for (int i = 0; i < dim_f; i++){
	cin>>dim_f; 
}

for (int i = 0; i < dim_f; i++){
	cout << f[i] << endl; 
}


void fusione (int v1[ ], int dim_v1, int v2[ ], int dim_v2, int v3[ ], int dim_v3){
    for (int i = 0; i < (dim_v1 + dim_v2); i++){
        v3[i] = v1[i]; 
        for (int j = dim_v1; j < (dim_v1+dim_v2); j++){
            v3[j] = v2[j-dim_v1]; 
        }
    }
}











